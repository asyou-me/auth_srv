// Autogenerated by Thrift Compiler (0.9.3)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package User

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var GoUnusedProtection__ int

type Timestamp int64

func TimestampPtr(v Timestamp) *Timestamp { return &v }

// Attributes:
//  - ID
//  - Username
//  - Email
//  - Name
//  - Timezone
//  - Created
//  - Updated
//  - Deleted
//  - Active
//  - ShardId
//  - Attributes
type User struct {
	ID       string `thrift:"id,1,required" json:"id"`
	Username string `thrift:"username,2,required" json:"username"`
	Email    string `thrift:"email,3,required" json:"email"`
	Name     string `thrift:"name,4,required" json:"name"`
	// unused field # 5
	Timezone *string `thrift:"timezone,6" json:"timezone,omitempty"`
	// unused fields # 7 to 8
	Created *Timestamp `thrift:"created,9" json:"created,omitempty"`
	Updated *Timestamp `thrift:"updated,10" json:"updated,omitempty"`
	Deleted *Timestamp `thrift:"deleted,11" json:"deleted,omitempty"`
	// unused field # 12
	Active     *bool           `thrift:"active,13" json:"active,omitempty"`
	ShardId    *string         `thrift:"shardId,14" json:"shardId,omitempty"`
	Attributes *UserAttributes `thrift:"attributes,15" json:"attributes,omitempty"`
}

func NewUser() *User {
	return &User{}
}

func (p *User) GetID() string {
	return p.ID
}

func (p *User) GetUsername() string {
	return p.Username
}

func (p *User) GetEmail() string {
	return p.Email
}

func (p *User) GetName() string {
	return p.Name
}

var User_Timezone_DEFAULT string

func (p *User) GetTimezone() string {
	if !p.IsSetTimezone() {
		return User_Timezone_DEFAULT
	}
	return *p.Timezone
}

var User_Created_DEFAULT Timestamp

func (p *User) GetCreated() Timestamp {
	if !p.IsSetCreated() {
		return User_Created_DEFAULT
	}
	return *p.Created
}

var User_Updated_DEFAULT Timestamp

func (p *User) GetUpdated() Timestamp {
	if !p.IsSetUpdated() {
		return User_Updated_DEFAULT
	}
	return *p.Updated
}

var User_Deleted_DEFAULT Timestamp

func (p *User) GetDeleted() Timestamp {
	if !p.IsSetDeleted() {
		return User_Deleted_DEFAULT
	}
	return *p.Deleted
}

var User_Active_DEFAULT bool

func (p *User) GetActive() bool {
	if !p.IsSetActive() {
		return User_Active_DEFAULT
	}
	return *p.Active
}

var User_ShardId_DEFAULT string

func (p *User) GetShardId() string {
	if !p.IsSetShardId() {
		return User_ShardId_DEFAULT
	}
	return *p.ShardId
}

var User_Attributes_DEFAULT UserAttributes

func (p *User) GetAttributes() UserAttributes {
	if !p.IsSetAttributes() {
		return User_Attributes_DEFAULT
	}
	return *p.Attributes
}
func (p *User) IsSetTimezone() bool {
	return p.Timezone != nil
}

func (p *User) IsSetCreated() bool {
	return p.Created != nil
}

func (p *User) IsSetUpdated() bool {
	return p.Updated != nil
}

func (p *User) IsSetDeleted() bool {
	return p.Deleted != nil
}

func (p *User) IsSetActive() bool {
	return p.Active != nil
}

func (p *User) IsSetShardId() bool {
	return p.ShardId != nil
}

func (p *User) IsSetAttributes() bool {
	return p.Attributes != nil
}

func (p *User) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	var issetID bool = false
	var issetUsername bool = false
	var issetEmail bool = false
	var issetName bool = false

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
			issetID = true
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
			issetUsername = true
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
			issetEmail = true
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
			issetName = true
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.readField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.readField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.readField11(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.readField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.readField14(iprot); err != nil {
				return err
			}
		case 15:
			if err := p.readField15(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	if !issetID {
		return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field ID is not set"))
	}
	if !issetUsername {
		return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field Username is not set"))
	}
	if !issetEmail {
		return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field Email is not set"))
	}
	if !issetName {
		return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field Name is not set"))
	}
	return nil
}

func (p *User) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.ID = v
	}
	return nil
}

func (p *User) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Username = v
	}
	return nil
}

func (p *User) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Email = v
	}
	return nil
}

func (p *User) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Name = v
	}
	return nil
}

func (p *User) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.Timezone = &v
	}
	return nil
}

func (p *User) readField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		temp := Timestamp(v)
		p.Created = &temp
	}
	return nil
}

func (p *User) readField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		temp := Timestamp(v)
		p.Updated = &temp
	}
	return nil
}

func (p *User) readField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 11: ", err)
	} else {
		temp := Timestamp(v)
		p.Deleted = &temp
	}
	return nil
}

func (p *User) readField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 13: ", err)
	} else {
		p.Active = &v
	}
	return nil
}

func (p *User) readField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 14: ", err)
	} else {
		p.ShardId = &v
	}
	return nil
}

func (p *User) readField15(iprot thrift.TProtocol) error {
	p.Attributes = &UserAttributes{}
	if err := p.Attributes.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Attributes), err)
	}
	return nil
}

func (p *User) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("User"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := p.writeField13(oprot); err != nil {
		return err
	}
	if err := p.writeField14(oprot); err != nil {
		return err
	}
	if err := p.writeField15(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *User) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("id", thrift.STRING, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:id: ", p), err)
	}
	if err := oprot.WriteString(string(p.ID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:id: ", p), err)
	}
	return err
}

func (p *User) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("username", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:username: ", p), err)
	}
	if err := oprot.WriteString(string(p.Username)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.username (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:username: ", p), err)
	}
	return err
}

func (p *User) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("email", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:email: ", p), err)
	}
	if err := oprot.WriteString(string(p.Email)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.email (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:email: ", p), err)
	}
	return err
}

func (p *User) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("name", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:name: ", p), err)
	}
	if err := oprot.WriteString(string(p.Name)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.name (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:name: ", p), err)
	}
	return err
}

func (p *User) writeField6(oprot thrift.TProtocol) (err error) {
	if p.IsSetTimezone() {
		if err := oprot.WriteFieldBegin("timezone", thrift.STRING, 6); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:timezone: ", p), err)
		}
		if err := oprot.WriteString(string(*p.Timezone)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.timezone (6) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 6:timezone: ", p), err)
		}
	}
	return err
}

func (p *User) writeField9(oprot thrift.TProtocol) (err error) {
	if p.IsSetCreated() {
		if err := oprot.WriteFieldBegin("created", thrift.I64, 9); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:created: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.Created)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.created (9) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 9:created: ", p), err)
		}
	}
	return err
}

func (p *User) writeField10(oprot thrift.TProtocol) (err error) {
	if p.IsSetUpdated() {
		if err := oprot.WriteFieldBegin("updated", thrift.I64, 10); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:updated: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.Updated)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.updated (10) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 10:updated: ", p), err)
		}
	}
	return err
}

func (p *User) writeField11(oprot thrift.TProtocol) (err error) {
	if p.IsSetDeleted() {
		if err := oprot.WriteFieldBegin("deleted", thrift.I64, 11); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:deleted: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.Deleted)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.deleted (11) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 11:deleted: ", p), err)
		}
	}
	return err
}

func (p *User) writeField13(oprot thrift.TProtocol) (err error) {
	if p.IsSetActive() {
		if err := oprot.WriteFieldBegin("active", thrift.BOOL, 13); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:active: ", p), err)
		}
		if err := oprot.WriteBool(bool(*p.Active)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.active (13) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 13:active: ", p), err)
		}
	}
	return err
}

func (p *User) writeField14(oprot thrift.TProtocol) (err error) {
	if p.IsSetShardId() {
		if err := oprot.WriteFieldBegin("shardId", thrift.STRING, 14); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:shardId: ", p), err)
		}
		if err := oprot.WriteString(string(*p.ShardId)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.shardId (14) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 14:shardId: ", p), err)
		}
	}
	return err
}

func (p *User) writeField15(oprot thrift.TProtocol) (err error) {
	if p.IsSetAttributes() {
		if err := oprot.WriteFieldBegin("attributes", thrift.STRUCT, 15); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:attributes: ", p), err)
		}
		if err := p.Attributes.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Attributes), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 15:attributes: ", p), err)
		}
	}
	return err
}

func (p *User) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("User(%+v)", *p)
}

// Attributes:
//  - DefaultLocationName
//  - DefaultLatitude
//  - DefaultLongitude
//  - Preactivation
//  - ViewedPromotions
//  - IncomingEmailAddress
//  - RecentMailedAddresses
//  - Comments
//  - DateAgreedToTermsOfService
//  - MaxReferrals
//  - ReferralCount
//  - RefererCode
//  - SentEmailDate
//  - SentEmailCount
//  - DailyEmailLimit
//  - EmailOptOutDate
//  - PartnerEmailOptInDate
//  - PreferredLanguage
//  - PreferredCountry
//  - ClipFullPage
//  - TwitterUserName
//  - TwitterId
//  - GroupName
//  - RecognitionLanguage
//  - ReferralProof
//  - EducationalDiscount
//  - BusinessAddress
//  - HideSponsorBilling
//  - TaxExempt
//  - UseEmailAutoFiling
//  - ReminderEmailConfig
type UserAttributes struct {
	DefaultLocationName   *string  `thrift:"defaultLocationName,1" json:"defaultLocationName,omitempty"`
	DefaultLatitude       *float64 `thrift:"defaultLatitude,2" json:"defaultLatitude,omitempty"`
	DefaultLongitude      *float64 `thrift:"defaultLongitude,3" json:"defaultLongitude,omitempty"`
	Preactivation         *bool    `thrift:"preactivation,4" json:"preactivation,omitempty"`
	ViewedPromotions      []string `thrift:"viewedPromotions,5" json:"viewedPromotions,omitempty"`
	IncomingEmailAddress  *string  `thrift:"incomingEmailAddress,6" json:"incomingEmailAddress,omitempty"`
	RecentMailedAddresses []string `thrift:"recentMailedAddresses,7" json:"recentMailedAddresses,omitempty"`
	// unused field # 8
	Comments *string `thrift:"comments,9" json:"comments,omitempty"`
	// unused field # 10
	DateAgreedToTermsOfService *Timestamp `thrift:"dateAgreedToTermsOfService,11" json:"dateAgreedToTermsOfService,omitempty"`
	MaxReferrals               *int32     `thrift:"maxReferrals,12" json:"maxReferrals,omitempty"`
	ReferralCount              *int32     `thrift:"referralCount,13" json:"referralCount,omitempty"`
	RefererCode                *string    `thrift:"refererCode,14" json:"refererCode,omitempty"`
	SentEmailDate              *Timestamp `thrift:"sentEmailDate,15" json:"sentEmailDate,omitempty"`
	SentEmailCount             *int32     `thrift:"sentEmailCount,16" json:"sentEmailCount,omitempty"`
	DailyEmailLimit            *int32     `thrift:"dailyEmailLimit,17" json:"dailyEmailLimit,omitempty"`
	EmailOptOutDate            *Timestamp `thrift:"emailOptOutDate,18" json:"emailOptOutDate,omitempty"`
	PartnerEmailOptInDate      *Timestamp `thrift:"partnerEmailOptInDate,19" json:"partnerEmailOptInDate,omitempty"`
	PreferredLanguage          *string    `thrift:"preferredLanguage,20" json:"preferredLanguage,omitempty"`
	PreferredCountry           *string    `thrift:"preferredCountry,21" json:"preferredCountry,omitempty"`
	ClipFullPage               *bool      `thrift:"clipFullPage,22" json:"clipFullPage,omitempty"`
	TwitterUserName            *string    `thrift:"twitterUserName,23" json:"twitterUserName,omitempty"`
	TwitterId                  *string    `thrift:"twitterId,24" json:"twitterId,omitempty"`
	GroupName                  *string    `thrift:"groupName,25" json:"groupName,omitempty"`
	RecognitionLanguage        *string    `thrift:"recognitionLanguage,26" json:"recognitionLanguage,omitempty"`
	// unused field # 27
	ReferralProof       *string `thrift:"referralProof,28" json:"referralProof,omitempty"`
	EducationalDiscount *bool   `thrift:"educationalDiscount,29" json:"educationalDiscount,omitempty"`
	BusinessAddress     *string `thrift:"businessAddress,30" json:"businessAddress,omitempty"`
	HideSponsorBilling  *bool   `thrift:"hideSponsorBilling,31" json:"hideSponsorBilling,omitempty"`
	TaxExempt           *bool   `thrift:"taxExempt,32" json:"taxExempt,omitempty"`
	UseEmailAutoFiling  *bool   `thrift:"useEmailAutoFiling,33" json:"useEmailAutoFiling,omitempty"`
	ReminderEmailConfig *int32  `thrift:"reminderEmailConfig,34" json:"reminderEmailConfig,omitempty"`
}

func NewUserAttributes() *UserAttributes {
	return &UserAttributes{}
}

var UserAttributes_DefaultLocationName_DEFAULT string

func (p *UserAttributes) GetDefaultLocationName() string {
	if !p.IsSetDefaultLocationName() {
		return UserAttributes_DefaultLocationName_DEFAULT
	}
	return *p.DefaultLocationName
}

var UserAttributes_DefaultLatitude_DEFAULT float64

func (p *UserAttributes) GetDefaultLatitude() float64 {
	if !p.IsSetDefaultLatitude() {
		return UserAttributes_DefaultLatitude_DEFAULT
	}
	return *p.DefaultLatitude
}

var UserAttributes_DefaultLongitude_DEFAULT float64

func (p *UserAttributes) GetDefaultLongitude() float64 {
	if !p.IsSetDefaultLongitude() {
		return UserAttributes_DefaultLongitude_DEFAULT
	}
	return *p.DefaultLongitude
}

var UserAttributes_Preactivation_DEFAULT bool

func (p *UserAttributes) GetPreactivation() bool {
	if !p.IsSetPreactivation() {
		return UserAttributes_Preactivation_DEFAULT
	}
	return *p.Preactivation
}

var UserAttributes_ViewedPromotions_DEFAULT []string

func (p *UserAttributes) GetViewedPromotions() []string {
	return p.ViewedPromotions
}

var UserAttributes_IncomingEmailAddress_DEFAULT string

func (p *UserAttributes) GetIncomingEmailAddress() string {
	if !p.IsSetIncomingEmailAddress() {
		return UserAttributes_IncomingEmailAddress_DEFAULT
	}
	return *p.IncomingEmailAddress
}

var UserAttributes_RecentMailedAddresses_DEFAULT []string

func (p *UserAttributes) GetRecentMailedAddresses() []string {
	return p.RecentMailedAddresses
}

var UserAttributes_Comments_DEFAULT string

func (p *UserAttributes) GetComments() string {
	if !p.IsSetComments() {
		return UserAttributes_Comments_DEFAULT
	}
	return *p.Comments
}

var UserAttributes_DateAgreedToTermsOfService_DEFAULT Timestamp

func (p *UserAttributes) GetDateAgreedToTermsOfService() Timestamp {
	if !p.IsSetDateAgreedToTermsOfService() {
		return UserAttributes_DateAgreedToTermsOfService_DEFAULT
	}
	return *p.DateAgreedToTermsOfService
}

var UserAttributes_MaxReferrals_DEFAULT int32

func (p *UserAttributes) GetMaxReferrals() int32 {
	if !p.IsSetMaxReferrals() {
		return UserAttributes_MaxReferrals_DEFAULT
	}
	return *p.MaxReferrals
}

var UserAttributes_ReferralCount_DEFAULT int32

func (p *UserAttributes) GetReferralCount() int32 {
	if !p.IsSetReferralCount() {
		return UserAttributes_ReferralCount_DEFAULT
	}
	return *p.ReferralCount
}

var UserAttributes_RefererCode_DEFAULT string

func (p *UserAttributes) GetRefererCode() string {
	if !p.IsSetRefererCode() {
		return UserAttributes_RefererCode_DEFAULT
	}
	return *p.RefererCode
}

var UserAttributes_SentEmailDate_DEFAULT Timestamp

func (p *UserAttributes) GetSentEmailDate() Timestamp {
	if !p.IsSetSentEmailDate() {
		return UserAttributes_SentEmailDate_DEFAULT
	}
	return *p.SentEmailDate
}

var UserAttributes_SentEmailCount_DEFAULT int32

func (p *UserAttributes) GetSentEmailCount() int32 {
	if !p.IsSetSentEmailCount() {
		return UserAttributes_SentEmailCount_DEFAULT
	}
	return *p.SentEmailCount
}

var UserAttributes_DailyEmailLimit_DEFAULT int32

func (p *UserAttributes) GetDailyEmailLimit() int32 {
	if !p.IsSetDailyEmailLimit() {
		return UserAttributes_DailyEmailLimit_DEFAULT
	}
	return *p.DailyEmailLimit
}

var UserAttributes_EmailOptOutDate_DEFAULT Timestamp

func (p *UserAttributes) GetEmailOptOutDate() Timestamp {
	if !p.IsSetEmailOptOutDate() {
		return UserAttributes_EmailOptOutDate_DEFAULT
	}
	return *p.EmailOptOutDate
}

var UserAttributes_PartnerEmailOptInDate_DEFAULT Timestamp

func (p *UserAttributes) GetPartnerEmailOptInDate() Timestamp {
	if !p.IsSetPartnerEmailOptInDate() {
		return UserAttributes_PartnerEmailOptInDate_DEFAULT
	}
	return *p.PartnerEmailOptInDate
}

var UserAttributes_PreferredLanguage_DEFAULT string

func (p *UserAttributes) GetPreferredLanguage() string {
	if !p.IsSetPreferredLanguage() {
		return UserAttributes_PreferredLanguage_DEFAULT
	}
	return *p.PreferredLanguage
}

var UserAttributes_PreferredCountry_DEFAULT string

func (p *UserAttributes) GetPreferredCountry() string {
	if !p.IsSetPreferredCountry() {
		return UserAttributes_PreferredCountry_DEFAULT
	}
	return *p.PreferredCountry
}

var UserAttributes_ClipFullPage_DEFAULT bool

func (p *UserAttributes) GetClipFullPage() bool {
	if !p.IsSetClipFullPage() {
		return UserAttributes_ClipFullPage_DEFAULT
	}
	return *p.ClipFullPage
}

var UserAttributes_TwitterUserName_DEFAULT string

func (p *UserAttributes) GetTwitterUserName() string {
	if !p.IsSetTwitterUserName() {
		return UserAttributes_TwitterUserName_DEFAULT
	}
	return *p.TwitterUserName
}

var UserAttributes_TwitterId_DEFAULT string

func (p *UserAttributes) GetTwitterId() string {
	if !p.IsSetTwitterId() {
		return UserAttributes_TwitterId_DEFAULT
	}
	return *p.TwitterId
}

var UserAttributes_GroupName_DEFAULT string

func (p *UserAttributes) GetGroupName() string {
	if !p.IsSetGroupName() {
		return UserAttributes_GroupName_DEFAULT
	}
	return *p.GroupName
}

var UserAttributes_RecognitionLanguage_DEFAULT string

func (p *UserAttributes) GetRecognitionLanguage() string {
	if !p.IsSetRecognitionLanguage() {
		return UserAttributes_RecognitionLanguage_DEFAULT
	}
	return *p.RecognitionLanguage
}

var UserAttributes_ReferralProof_DEFAULT string

func (p *UserAttributes) GetReferralProof() string {
	if !p.IsSetReferralProof() {
		return UserAttributes_ReferralProof_DEFAULT
	}
	return *p.ReferralProof
}

var UserAttributes_EducationalDiscount_DEFAULT bool

func (p *UserAttributes) GetEducationalDiscount() bool {
	if !p.IsSetEducationalDiscount() {
		return UserAttributes_EducationalDiscount_DEFAULT
	}
	return *p.EducationalDiscount
}

var UserAttributes_BusinessAddress_DEFAULT string

func (p *UserAttributes) GetBusinessAddress() string {
	if !p.IsSetBusinessAddress() {
		return UserAttributes_BusinessAddress_DEFAULT
	}
	return *p.BusinessAddress
}

var UserAttributes_HideSponsorBilling_DEFAULT bool

func (p *UserAttributes) GetHideSponsorBilling() bool {
	if !p.IsSetHideSponsorBilling() {
		return UserAttributes_HideSponsorBilling_DEFAULT
	}
	return *p.HideSponsorBilling
}

var UserAttributes_TaxExempt_DEFAULT bool

func (p *UserAttributes) GetTaxExempt() bool {
	if !p.IsSetTaxExempt() {
		return UserAttributes_TaxExempt_DEFAULT
	}
	return *p.TaxExempt
}

var UserAttributes_UseEmailAutoFiling_DEFAULT bool

func (p *UserAttributes) GetUseEmailAutoFiling() bool {
	if !p.IsSetUseEmailAutoFiling() {
		return UserAttributes_UseEmailAutoFiling_DEFAULT
	}
	return *p.UseEmailAutoFiling
}

var UserAttributes_ReminderEmailConfig_DEFAULT int32

func (p *UserAttributes) GetReminderEmailConfig() int32 {
	if !p.IsSetReminderEmailConfig() {
		return UserAttributes_ReminderEmailConfig_DEFAULT
	}
	return *p.ReminderEmailConfig
}
func (p *UserAttributes) IsSetDefaultLocationName() bool {
	return p.DefaultLocationName != nil
}

func (p *UserAttributes) IsSetDefaultLatitude() bool {
	return p.DefaultLatitude != nil
}

func (p *UserAttributes) IsSetDefaultLongitude() bool {
	return p.DefaultLongitude != nil
}

func (p *UserAttributes) IsSetPreactivation() bool {
	return p.Preactivation != nil
}

func (p *UserAttributes) IsSetViewedPromotions() bool {
	return p.ViewedPromotions != nil
}

func (p *UserAttributes) IsSetIncomingEmailAddress() bool {
	return p.IncomingEmailAddress != nil
}

func (p *UserAttributes) IsSetRecentMailedAddresses() bool {
	return p.RecentMailedAddresses != nil
}

func (p *UserAttributes) IsSetComments() bool {
	return p.Comments != nil
}

func (p *UserAttributes) IsSetDateAgreedToTermsOfService() bool {
	return p.DateAgreedToTermsOfService != nil
}

func (p *UserAttributes) IsSetMaxReferrals() bool {
	return p.MaxReferrals != nil
}

func (p *UserAttributes) IsSetReferralCount() bool {
	return p.ReferralCount != nil
}

func (p *UserAttributes) IsSetRefererCode() bool {
	return p.RefererCode != nil
}

func (p *UserAttributes) IsSetSentEmailDate() bool {
	return p.SentEmailDate != nil
}

func (p *UserAttributes) IsSetSentEmailCount() bool {
	return p.SentEmailCount != nil
}

func (p *UserAttributes) IsSetDailyEmailLimit() bool {
	return p.DailyEmailLimit != nil
}

func (p *UserAttributes) IsSetEmailOptOutDate() bool {
	return p.EmailOptOutDate != nil
}

func (p *UserAttributes) IsSetPartnerEmailOptInDate() bool {
	return p.PartnerEmailOptInDate != nil
}

func (p *UserAttributes) IsSetPreferredLanguage() bool {
	return p.PreferredLanguage != nil
}

func (p *UserAttributes) IsSetPreferredCountry() bool {
	return p.PreferredCountry != nil
}

func (p *UserAttributes) IsSetClipFullPage() bool {
	return p.ClipFullPage != nil
}

func (p *UserAttributes) IsSetTwitterUserName() bool {
	return p.TwitterUserName != nil
}

func (p *UserAttributes) IsSetTwitterId() bool {
	return p.TwitterId != nil
}

func (p *UserAttributes) IsSetGroupName() bool {
	return p.GroupName != nil
}

func (p *UserAttributes) IsSetRecognitionLanguage() bool {
	return p.RecognitionLanguage != nil
}

func (p *UserAttributes) IsSetReferralProof() bool {
	return p.ReferralProof != nil
}

func (p *UserAttributes) IsSetEducationalDiscount() bool {
	return p.EducationalDiscount != nil
}

func (p *UserAttributes) IsSetBusinessAddress() bool {
	return p.BusinessAddress != nil
}

func (p *UserAttributes) IsSetHideSponsorBilling() bool {
	return p.HideSponsorBilling != nil
}

func (p *UserAttributes) IsSetTaxExempt() bool {
	return p.TaxExempt != nil
}

func (p *UserAttributes) IsSetUseEmailAutoFiling() bool {
	return p.UseEmailAutoFiling != nil
}

func (p *UserAttributes) IsSetReminderEmailConfig() bool {
	return p.ReminderEmailConfig != nil
}

func (p *UserAttributes) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.readField7(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.readField9(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.readField11(iprot); err != nil {
				return err
			}
		case 12:
			if err := p.readField12(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.readField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.readField14(iprot); err != nil {
				return err
			}
		case 15:
			if err := p.readField15(iprot); err != nil {
				return err
			}
		case 16:
			if err := p.readField16(iprot); err != nil {
				return err
			}
		case 17:
			if err := p.readField17(iprot); err != nil {
				return err
			}
		case 18:
			if err := p.readField18(iprot); err != nil {
				return err
			}
		case 19:
			if err := p.readField19(iprot); err != nil {
				return err
			}
		case 20:
			if err := p.readField20(iprot); err != nil {
				return err
			}
		case 21:
			if err := p.readField21(iprot); err != nil {
				return err
			}
		case 22:
			if err := p.readField22(iprot); err != nil {
				return err
			}
		case 23:
			if err := p.readField23(iprot); err != nil {
				return err
			}
		case 24:
			if err := p.readField24(iprot); err != nil {
				return err
			}
		case 25:
			if err := p.readField25(iprot); err != nil {
				return err
			}
		case 26:
			if err := p.readField26(iprot); err != nil {
				return err
			}
		case 28:
			if err := p.readField28(iprot); err != nil {
				return err
			}
		case 29:
			if err := p.readField29(iprot); err != nil {
				return err
			}
		case 30:
			if err := p.readField30(iprot); err != nil {
				return err
			}
		case 31:
			if err := p.readField31(iprot); err != nil {
				return err
			}
		case 32:
			if err := p.readField32(iprot); err != nil {
				return err
			}
		case 33:
			if err := p.readField33(iprot); err != nil {
				return err
			}
		case 34:
			if err := p.readField34(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *UserAttributes) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.DefaultLocationName = &v
	}
	return nil
}

func (p *UserAttributes) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.DefaultLatitude = &v
	}
	return nil
}

func (p *UserAttributes) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.DefaultLongitude = &v
	}
	return nil
}

func (p *UserAttributes) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Preactivation = &v
	}
	return nil
}

func (p *UserAttributes) readField5(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return thrift.PrependError("error reading list begin: ", err)
	}
	tSlice := make([]string, 0, size)
	p.ViewedPromotions = tSlice
	for i := 0; i < size; i++ {
		var _elem0 string
		if v, err := iprot.ReadString(); err != nil {
			return thrift.PrependError("error reading field 0: ", err)
		} else {
			_elem0 = v
		}
		p.ViewedPromotions = append(p.ViewedPromotions, _elem0)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return thrift.PrependError("error reading list end: ", err)
	}
	return nil
}

func (p *UserAttributes) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.IncomingEmailAddress = &v
	}
	return nil
}

func (p *UserAttributes) readField7(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return thrift.PrependError("error reading list begin: ", err)
	}
	tSlice := make([]string, 0, size)
	p.RecentMailedAddresses = tSlice
	for i := 0; i < size; i++ {
		var _elem1 string
		if v, err := iprot.ReadString(); err != nil {
			return thrift.PrependError("error reading field 0: ", err)
		} else {
			_elem1 = v
		}
		p.RecentMailedAddresses = append(p.RecentMailedAddresses, _elem1)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return thrift.PrependError("error reading list end: ", err)
	}
	return nil
}

func (p *UserAttributes) readField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.Comments = &v
	}
	return nil
}

func (p *UserAttributes) readField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 11: ", err)
	} else {
		temp := Timestamp(v)
		p.DateAgreedToTermsOfService = &temp
	}
	return nil
}

func (p *UserAttributes) readField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 12: ", err)
	} else {
		p.MaxReferrals = &v
	}
	return nil
}

func (p *UserAttributes) readField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 13: ", err)
	} else {
		p.ReferralCount = &v
	}
	return nil
}

func (p *UserAttributes) readField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 14: ", err)
	} else {
		p.RefererCode = &v
	}
	return nil
}

func (p *UserAttributes) readField15(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 15: ", err)
	} else {
		temp := Timestamp(v)
		p.SentEmailDate = &temp
	}
	return nil
}

func (p *UserAttributes) readField16(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 16: ", err)
	} else {
		p.SentEmailCount = &v
	}
	return nil
}

func (p *UserAttributes) readField17(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 17: ", err)
	} else {
		p.DailyEmailLimit = &v
	}
	return nil
}

func (p *UserAttributes) readField18(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 18: ", err)
	} else {
		temp := Timestamp(v)
		p.EmailOptOutDate = &temp
	}
	return nil
}

func (p *UserAttributes) readField19(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 19: ", err)
	} else {
		temp := Timestamp(v)
		p.PartnerEmailOptInDate = &temp
	}
	return nil
}

func (p *UserAttributes) readField20(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 20: ", err)
	} else {
		p.PreferredLanguage = &v
	}
	return nil
}

func (p *UserAttributes) readField21(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 21: ", err)
	} else {
		p.PreferredCountry = &v
	}
	return nil
}

func (p *UserAttributes) readField22(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 22: ", err)
	} else {
		p.ClipFullPage = &v
	}
	return nil
}

func (p *UserAttributes) readField23(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 23: ", err)
	} else {
		p.TwitterUserName = &v
	}
	return nil
}

func (p *UserAttributes) readField24(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 24: ", err)
	} else {
		p.TwitterId = &v
	}
	return nil
}

func (p *UserAttributes) readField25(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 25: ", err)
	} else {
		p.GroupName = &v
	}
	return nil
}

func (p *UserAttributes) readField26(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 26: ", err)
	} else {
		p.RecognitionLanguage = &v
	}
	return nil
}

func (p *UserAttributes) readField28(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 28: ", err)
	} else {
		p.ReferralProof = &v
	}
	return nil
}

func (p *UserAttributes) readField29(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 29: ", err)
	} else {
		p.EducationalDiscount = &v
	}
	return nil
}

func (p *UserAttributes) readField30(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 30: ", err)
	} else {
		p.BusinessAddress = &v
	}
	return nil
}

func (p *UserAttributes) readField31(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 31: ", err)
	} else {
		p.HideSponsorBilling = &v
	}
	return nil
}

func (p *UserAttributes) readField32(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 32: ", err)
	} else {
		p.TaxExempt = &v
	}
	return nil
}

func (p *UserAttributes) readField33(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 33: ", err)
	} else {
		p.UseEmailAutoFiling = &v
	}
	return nil
}

func (p *UserAttributes) readField34(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 34: ", err)
	} else {
		p.ReminderEmailConfig = &v
	}
	return nil
}

func (p *UserAttributes) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("UserAttributes"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := p.writeField12(oprot); err != nil {
		return err
	}
	if err := p.writeField13(oprot); err != nil {
		return err
	}
	if err := p.writeField14(oprot); err != nil {
		return err
	}
	if err := p.writeField15(oprot); err != nil {
		return err
	}
	if err := p.writeField16(oprot); err != nil {
		return err
	}
	if err := p.writeField17(oprot); err != nil {
		return err
	}
	if err := p.writeField18(oprot); err != nil {
		return err
	}
	if err := p.writeField19(oprot); err != nil {
		return err
	}
	if err := p.writeField20(oprot); err != nil {
		return err
	}
	if err := p.writeField21(oprot); err != nil {
		return err
	}
	if err := p.writeField22(oprot); err != nil {
		return err
	}
	if err := p.writeField23(oprot); err != nil {
		return err
	}
	if err := p.writeField24(oprot); err != nil {
		return err
	}
	if err := p.writeField25(oprot); err != nil {
		return err
	}
	if err := p.writeField26(oprot); err != nil {
		return err
	}
	if err := p.writeField28(oprot); err != nil {
		return err
	}
	if err := p.writeField29(oprot); err != nil {
		return err
	}
	if err := p.writeField30(oprot); err != nil {
		return err
	}
	if err := p.writeField31(oprot); err != nil {
		return err
	}
	if err := p.writeField32(oprot); err != nil {
		return err
	}
	if err := p.writeField33(oprot); err != nil {
		return err
	}
	if err := p.writeField34(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *UserAttributes) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetDefaultLocationName() {
		if err := oprot.WriteFieldBegin("defaultLocationName", thrift.STRING, 1); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:defaultLocationName: ", p), err)
		}
		if err := oprot.WriteString(string(*p.DefaultLocationName)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.defaultLocationName (1) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 1:defaultLocationName: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetDefaultLatitude() {
		if err := oprot.WriteFieldBegin("defaultLatitude", thrift.DOUBLE, 2); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:defaultLatitude: ", p), err)
		}
		if err := oprot.WriteDouble(float64(*p.DefaultLatitude)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.defaultLatitude (2) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 2:defaultLatitude: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetDefaultLongitude() {
		if err := oprot.WriteFieldBegin("defaultLongitude", thrift.DOUBLE, 3); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:defaultLongitude: ", p), err)
		}
		if err := oprot.WriteDouble(float64(*p.DefaultLongitude)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.defaultLongitude (3) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 3:defaultLongitude: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetPreactivation() {
		if err := oprot.WriteFieldBegin("preactivation", thrift.BOOL, 4); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:preactivation: ", p), err)
		}
		if err := oprot.WriteBool(bool(*p.Preactivation)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.preactivation (4) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 4:preactivation: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetViewedPromotions() {
		if err := oprot.WriteFieldBegin("viewedPromotions", thrift.LIST, 5); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:viewedPromotions: ", p), err)
		}
		if err := oprot.WriteListBegin(thrift.STRING, len(p.ViewedPromotions)); err != nil {
			return thrift.PrependError("error writing list begin: ", err)
		}
		for _, v := range p.ViewedPromotions {
			if err := oprot.WriteString(string(v)); err != nil {
				return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err)
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return thrift.PrependError("error writing list end: ", err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 5:viewedPromotions: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField6(oprot thrift.TProtocol) (err error) {
	if p.IsSetIncomingEmailAddress() {
		if err := oprot.WriteFieldBegin("incomingEmailAddress", thrift.STRING, 6); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:incomingEmailAddress: ", p), err)
		}
		if err := oprot.WriteString(string(*p.IncomingEmailAddress)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.incomingEmailAddress (6) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 6:incomingEmailAddress: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField7(oprot thrift.TProtocol) (err error) {
	if p.IsSetRecentMailedAddresses() {
		if err := oprot.WriteFieldBegin("recentMailedAddresses", thrift.LIST, 7); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:recentMailedAddresses: ", p), err)
		}
		if err := oprot.WriteListBegin(thrift.STRING, len(p.RecentMailedAddresses)); err != nil {
			return thrift.PrependError("error writing list begin: ", err)
		}
		for _, v := range p.RecentMailedAddresses {
			if err := oprot.WriteString(string(v)); err != nil {
				return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err)
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return thrift.PrependError("error writing list end: ", err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 7:recentMailedAddresses: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField9(oprot thrift.TProtocol) (err error) {
	if p.IsSetComments() {
		if err := oprot.WriteFieldBegin("comments", thrift.STRING, 9); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:comments: ", p), err)
		}
		if err := oprot.WriteString(string(*p.Comments)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.comments (9) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 9:comments: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField11(oprot thrift.TProtocol) (err error) {
	if p.IsSetDateAgreedToTermsOfService() {
		if err := oprot.WriteFieldBegin("dateAgreedToTermsOfService", thrift.I64, 11); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:dateAgreedToTermsOfService: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.DateAgreedToTermsOfService)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.dateAgreedToTermsOfService (11) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 11:dateAgreedToTermsOfService: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField12(oprot thrift.TProtocol) (err error) {
	if p.IsSetMaxReferrals() {
		if err := oprot.WriteFieldBegin("maxReferrals", thrift.I32, 12); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:maxReferrals: ", p), err)
		}
		if err := oprot.WriteI32(int32(*p.MaxReferrals)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.maxReferrals (12) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 12:maxReferrals: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField13(oprot thrift.TProtocol) (err error) {
	if p.IsSetReferralCount() {
		if err := oprot.WriteFieldBegin("referralCount", thrift.I32, 13); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:referralCount: ", p), err)
		}
		if err := oprot.WriteI32(int32(*p.ReferralCount)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.referralCount (13) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 13:referralCount: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField14(oprot thrift.TProtocol) (err error) {
	if p.IsSetRefererCode() {
		if err := oprot.WriteFieldBegin("refererCode", thrift.STRING, 14); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:refererCode: ", p), err)
		}
		if err := oprot.WriteString(string(*p.RefererCode)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.refererCode (14) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 14:refererCode: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField15(oprot thrift.TProtocol) (err error) {
	if p.IsSetSentEmailDate() {
		if err := oprot.WriteFieldBegin("sentEmailDate", thrift.I64, 15); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:sentEmailDate: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.SentEmailDate)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.sentEmailDate (15) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 15:sentEmailDate: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField16(oprot thrift.TProtocol) (err error) {
	if p.IsSetSentEmailCount() {
		if err := oprot.WriteFieldBegin("sentEmailCount", thrift.I32, 16); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 16:sentEmailCount: ", p), err)
		}
		if err := oprot.WriteI32(int32(*p.SentEmailCount)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.sentEmailCount (16) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 16:sentEmailCount: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField17(oprot thrift.TProtocol) (err error) {
	if p.IsSetDailyEmailLimit() {
		if err := oprot.WriteFieldBegin("dailyEmailLimit", thrift.I32, 17); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 17:dailyEmailLimit: ", p), err)
		}
		if err := oprot.WriteI32(int32(*p.DailyEmailLimit)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.dailyEmailLimit (17) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 17:dailyEmailLimit: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField18(oprot thrift.TProtocol) (err error) {
	if p.IsSetEmailOptOutDate() {
		if err := oprot.WriteFieldBegin("emailOptOutDate", thrift.I64, 18); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 18:emailOptOutDate: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.EmailOptOutDate)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.emailOptOutDate (18) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 18:emailOptOutDate: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField19(oprot thrift.TProtocol) (err error) {
	if p.IsSetPartnerEmailOptInDate() {
		if err := oprot.WriteFieldBegin("partnerEmailOptInDate", thrift.I64, 19); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 19:partnerEmailOptInDate: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.PartnerEmailOptInDate)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.partnerEmailOptInDate (19) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 19:partnerEmailOptInDate: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField20(oprot thrift.TProtocol) (err error) {
	if p.IsSetPreferredLanguage() {
		if err := oprot.WriteFieldBegin("preferredLanguage", thrift.STRING, 20); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 20:preferredLanguage: ", p), err)
		}
		if err := oprot.WriteString(string(*p.PreferredLanguage)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.preferredLanguage (20) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 20:preferredLanguage: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField21(oprot thrift.TProtocol) (err error) {
	if p.IsSetPreferredCountry() {
		if err := oprot.WriteFieldBegin("preferredCountry", thrift.STRING, 21); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 21:preferredCountry: ", p), err)
		}
		if err := oprot.WriteString(string(*p.PreferredCountry)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.preferredCountry (21) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 21:preferredCountry: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField22(oprot thrift.TProtocol) (err error) {
	if p.IsSetClipFullPage() {
		if err := oprot.WriteFieldBegin("clipFullPage", thrift.BOOL, 22); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 22:clipFullPage: ", p), err)
		}
		if err := oprot.WriteBool(bool(*p.ClipFullPage)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.clipFullPage (22) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 22:clipFullPage: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField23(oprot thrift.TProtocol) (err error) {
	if p.IsSetTwitterUserName() {
		if err := oprot.WriteFieldBegin("twitterUserName", thrift.STRING, 23); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 23:twitterUserName: ", p), err)
		}
		if err := oprot.WriteString(string(*p.TwitterUserName)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.twitterUserName (23) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 23:twitterUserName: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField24(oprot thrift.TProtocol) (err error) {
	if p.IsSetTwitterId() {
		if err := oprot.WriteFieldBegin("twitterId", thrift.STRING, 24); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 24:twitterId: ", p), err)
		}
		if err := oprot.WriteString(string(*p.TwitterId)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.twitterId (24) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 24:twitterId: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField25(oprot thrift.TProtocol) (err error) {
	if p.IsSetGroupName() {
		if err := oprot.WriteFieldBegin("groupName", thrift.STRING, 25); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 25:groupName: ", p), err)
		}
		if err := oprot.WriteString(string(*p.GroupName)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.groupName (25) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 25:groupName: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField26(oprot thrift.TProtocol) (err error) {
	if p.IsSetRecognitionLanguage() {
		if err := oprot.WriteFieldBegin("recognitionLanguage", thrift.STRING, 26); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 26:recognitionLanguage: ", p), err)
		}
		if err := oprot.WriteString(string(*p.RecognitionLanguage)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.recognitionLanguage (26) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 26:recognitionLanguage: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField28(oprot thrift.TProtocol) (err error) {
	if p.IsSetReferralProof() {
		if err := oprot.WriteFieldBegin("referralProof", thrift.STRING, 28); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 28:referralProof: ", p), err)
		}
		if err := oprot.WriteString(string(*p.ReferralProof)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.referralProof (28) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 28:referralProof: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField29(oprot thrift.TProtocol) (err error) {
	if p.IsSetEducationalDiscount() {
		if err := oprot.WriteFieldBegin("educationalDiscount", thrift.BOOL, 29); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 29:educationalDiscount: ", p), err)
		}
		if err := oprot.WriteBool(bool(*p.EducationalDiscount)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.educationalDiscount (29) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 29:educationalDiscount: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField30(oprot thrift.TProtocol) (err error) {
	if p.IsSetBusinessAddress() {
		if err := oprot.WriteFieldBegin("businessAddress", thrift.STRING, 30); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 30:businessAddress: ", p), err)
		}
		if err := oprot.WriteString(string(*p.BusinessAddress)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.businessAddress (30) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 30:businessAddress: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField31(oprot thrift.TProtocol) (err error) {
	if p.IsSetHideSponsorBilling() {
		if err := oprot.WriteFieldBegin("hideSponsorBilling", thrift.BOOL, 31); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 31:hideSponsorBilling: ", p), err)
		}
		if err := oprot.WriteBool(bool(*p.HideSponsorBilling)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.hideSponsorBilling (31) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 31:hideSponsorBilling: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField32(oprot thrift.TProtocol) (err error) {
	if p.IsSetTaxExempt() {
		if err := oprot.WriteFieldBegin("taxExempt", thrift.BOOL, 32); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 32:taxExempt: ", p), err)
		}
		if err := oprot.WriteBool(bool(*p.TaxExempt)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.taxExempt (32) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 32:taxExempt: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField33(oprot thrift.TProtocol) (err error) {
	if p.IsSetUseEmailAutoFiling() {
		if err := oprot.WriteFieldBegin("useEmailAutoFiling", thrift.BOOL, 33); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 33:useEmailAutoFiling: ", p), err)
		}
		if err := oprot.WriteBool(bool(*p.UseEmailAutoFiling)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.useEmailAutoFiling (33) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 33:useEmailAutoFiling: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) writeField34(oprot thrift.TProtocol) (err error) {
	if p.IsSetReminderEmailConfig() {
		if err := oprot.WriteFieldBegin("reminderEmailConfig", thrift.I32, 34); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 34:reminderEmailConfig: ", p), err)
		}
		if err := oprot.WriteI32(int32(*p.ReminderEmailConfig)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.reminderEmailConfig (34) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 34:reminderEmailConfig: ", p), err)
		}
	}
	return err
}

func (p *UserAttributes) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UserAttributes(%+v)", *p)
}
